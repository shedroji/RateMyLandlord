@model RateMyLandlord.Models.ViewModels.Property.CreatePropertyViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create a Property</h2>


@using (Html.BeginForm("Create", "Property", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Can't find your property? Create it here!</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.StreetAddress, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Street Address</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.StreetAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StreetAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.State, Model.stateList, "-- Select A State --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Zip Code</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">*@
            @*@Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })*@
            @*<label class="control-label col-md-2">Rating</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            </div>*@
        @*</div>*@

        <div class="form-group">
            @*@Html.LabelFor(model => model.UtilitiesIncluded, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Utilities Included</label>
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.UtilitiesIncluded)
                    @Html.ValidationMessageFor(model => model.UtilitiesIncluded, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.ImageContent, new { @class = "control-label col-md-2" })
                <input name="file" id="file" type="file" accept="image/*" /> 
                @Html.ValidationMessageFor(model => model.ImageContent)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default blue-grey white-text" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
